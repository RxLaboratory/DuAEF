/*
	DuExpressionsLib
    Library to with tools for expressions, and predefined functions

	This file is part of DuAEF.

	DuAEF is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	DuAEF is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with DuAEF. If not, see <http://www.gnu.org/licenses/>.
*/

//expressions generated from DuAEF_DuExpressionLib
#include DuExpression_scripting.jsxinc

/**
 * Gets functions and their dependencies from the library.
 * @param {string[]} functions The name of the functions to get
 * @return {string} The expression
 */
DuAEF.DuExpression.get = function( functions )
{
	var exp = functions;
	new Iterator(functions).do(function(functionName)
	{
		var r = DuAEF.DuExpression.getRequirements( functionName );
		exp = exp.concat(r);
	});

	DuAEF.DuJS.Array.removeDuplicates(exp);

	var expString = '';

	new Iterator(exp).do(function(expName)
	{
		expString += DuAEF.DuExpression.Library[ expName ].expression + '\n';
	});

	return expString;
}

/**
 * A recursive method to get all the requirements (dependencies) of a function from a library
 * @param {string} functionName The name of the function
 * @return {string[]} The names of the required functions, including the querried one
 */
DuAEF.DuExpression.getRequirements = function ( functionName )
{
	var r = DuAEF.DuExpression.Library[ functionName ].requirements;
	if (r.length > 0)
	{
		for (var i = 0, iN = r.length; i < iN; i++)
		{
			r = r.concat(DuAEF.DuExpression.getRequirements( r[i]) );
		}
	}

	return r;
}