
/**
 * @class
 * @name DuFolderSelector
 * @classdesc For use with {@link DuAEF.DuScriptUI}.<br />
 * A "Browse" button for folders only, with an optional text field for the path.<br />
 * This is not a real class, and cannot be instanciated.<br />
 * Use {@link DuAEF.DuScriptUI.addFolderSelector} to create a selector.<br />
 * The DuFolderSelector inherits the Group object from ScriptUI and has all of its properties and methods.
 * @property {string} path - The folder path, initialized with an empty string. Note that this may not point to an existing folder if the user entered an incorrect path in the text field.<br />
 * To be sure to get an existing folder, you can use the getFolder() method.
 * @property {DuEditText|null} editText - The text field, if any.
 * @property {DuButton} button - The "Browse" button.
 */

/**
 * Gets the selected folder.
 * @method
 * @memberof DuFolderSelector
 * @name getFolder
 * @return {Folder|null} The new Folder, if any. null if the Folder does not exist or the user has input an incorrect path.
 */

/**
 * Creates a folder selector with a field for the path and a browse button<br />
 * @memberof DuAEF.DuScriptUI
 * @param {Window|Panel|Group} container - The ScriptUI Object which will contain and display the panel.
 * @param {string} [text="Browse..."] - The text to display on the button.
 * @param {boolean} [textField=true] - Wether to show the text field for the path.
 * @param {string} [helpTip=''] - The helptip for this control.
 * @return {TabPanel} The panel.
 */
DuAEF.DuScriptUI.addFolderSelector = function ( container, text, textField, helpTip )
{
    text = def(text, "Browse...");
    textField = def(textField, true);
    helpTip = def(helpTip, '');

    var folderSelector = container.add('group');
    folderSelector.orientation = 'row';
    folderSelector.margins = 2;
    folderSelector.spacing = 0;

    folderSelector.path = '';

    folderSelector.button = DuAEF.DuScriptUI.addButton(
        folderSelector,
        text,
        DuAEF.DuBinary.toFile(w14_folder_m),
        helpTip,
        DuAEF.DuBinary.toFile(w14_folder_r)
        );
    folderSelector.button.alignment = ['left','fill'];

    folderSelector.editText = null;
    if (textField) {
        folderSelector.editText = DuAEF.DuScriptUI.addEditText(
            folderSelector,
            '',
            '',
            '',
            'Path...',
            helpTip,
            false
            );
        folderSelector.editText.alignment = ['fill','center'];

        folderSelector.editText.onChange = function () {
            folderSelector.path = folderSelector.editText.text;
        }
    }

    folderSelector.button.onClick = function () {
        var folder = Folder.selectDialog ("Select Folder");
        if (!folder) return;
        folderSelector.editText.setText(folder.fsName);
        folderSelector.path = folder.absoluteURI;
    }

    folderSelector.getFolder = function () {
        var folder = new Folder(folderSelector.path);
        if (folder.exists) return folder;
        else return null;
    }

    return folderSelector;
}