/* License
	DuAEF - Duduf After Effects Framework

	Copyright (c) 2008 - 2021 Nicolas Dufresne, RxLaboratory

	https://RxLaboratory.org

	This file is part of DuAEF.

		DuAEF is free software: you can redistribute it and/or modify
		it under the terms of the GNU General Public License as published by
		the Free Software Foundation, either version 3 of the License, or
		(at your option) any later version.

		DuAEF is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.

		You should have received a copy of the GNU General Public License
		along with DuAEF. If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * The Duduf After Effects ExtendScript Framework.<br />
 * by {@link https://RxLaboratory.org RxLaboratory} and {@link http://duduf.com Duduf}.
 * @namespace
 * @author Nicolas Dufresne and contributors
 * @copyright 2017 - 2021 Nicolas Dufresne, RxLaboratory
 * @version 1.0.0
 * @license GPL-3.0 <br />
 * DuAEF is free software: you can redistribute it and/or modify<br />
 * it under the terms of the GNU General Public License as published by<br />
 * the Free Software Foundation, either version 3 of the License, or<br />
 * (at your option) any later version.<br />
 *<br />
 * DuAEF is distributed in the hope that it will be useful,<br />
 * but WITHOUT ANY WARRANTY; without even the implied warranty of<br />
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br />
 * GNU General Public License for more details.<br />
 *<br />
 * You should have received a copy of the GNU General Public License<br />
 * along with DuAEF. If not, see {@link http://www.gnu.org/licenses/}.
 */
var DuAEF = {};
/**
 * The Current DuAEF Version
 * @readonly
 * @memberof DuAEF
 * @type {string}
 */
DuAEF.version = new DuVersion('1.0.0');

/**
 * True if the script is run for the first time (new or the version has changed since last run)
 * @memberof DuAEF
 * @type {boolean}
 * @readonly
 */
DuAEF.scriptFirstRun = true;

/**
 * The current DuAEF File
 * @readonly
 * @memberof DuAEF
 * @type {File}
 */
DuAEF.file = new File( $.fileName );

/**
 * Enum for states.
 * @readonly
 * @enum {int}
 */
DuAEF.State = {
    NOT_SET: -1,
    INIT: 0,
    RUNTIME: 1
};

/**
 * The current state of the script
 * @type {DuAEF.State}
 */
DuAEF.state = DuAEF.State.NOT_SET;

/**
 * This method has to be called once at the very beginning of the script, just after the inclusion of DuAEF <code>#include DuAEF.jsxinc</code>
 * @param {string} [scriptName="DuAEF"] - The name of your script, as it has to be displayed in the UI and the filesystem
 * @param {string} [scriptVersion="0.0.0"] - The version of your script, in the form "XX.XX.XX-Comment", for example "1.0.12-Beta". The "-Comment" part is optional.
 */
DuAEF.init = function( scriptName, scriptVersion )
{
    DuAEF.state = DuAEF.State.INIT;

    // init DuESF

    // check if this script has already been run once
    // Check the version from latest run
    if ( app.settings.haveSetting( DuAEF.scriptName, "version" ) )
    {
        var prevVersion = app.settings.getSetting( DuAEF.scriptName, "version" );
        if ( prevVersion == scriptVersion ) DuAEF.scriptFirstRun = false;
    }
}

/**
 * This method has to be called once at the end of the script, when everything is ready and the main UI visible (after any prompt or setup during startup).
 */
DuAEF.enterRunTime = function()
{
    app.settings.saveSetting( DuAEF.scriptName, "version", DuAEF.scriptVersion.fullVersion );
    DuAEF.state = DuAEF.State.RUNTIME;

    //do post init methods if modules are included
    if (DuAEF.DuAE) DuAEF.DuAE.postInit();
    if (DuAEF.Duik) DuAEF.Duik.postInit();
}
