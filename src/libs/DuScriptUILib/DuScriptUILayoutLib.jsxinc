
/**
 * Adds a group in a container, using  DuAEF.DuScriptUI default alignments, and DuAEF.DuScriptUI.defaultSpacing. Margins are set to 0.
 * @memberof DuAEF.DuScriptUI
 * @param {Panel|Window|Group}		container	- Where to create the group
 * @param {string}					[orientation] - The orientation to use. One of "column", "row" or "stack". By default, "column" if added in a row, "row" if added in a column.
 * @return {Group}	The group created
 */
DuAEF.DuScriptUI.addGroup = function( container, orientation )
{
    var group = container.add( "group" );
    group.spacing = 2;
    group.margins = 0;
    if ( orientation !== undefined ) group.orientation = orientation;
    if ( group.orientation === "row" )
    {
        group.alignChildren = DuAEF.DuScriptUI.defaultRowAlignment;
    }
    else if ( group.orientation === "column" )
    {
        group.alignChildren = DuAEF.DuScriptUI.defaultColumnAlignment;
    }
    else
    {
        group.alignChildren = DuAEF.DuScriptUI.defaultStackAlignment;
    }

    group.addEventListener( "mouseover", DuAEF.DuScriptUI.dimControls );

    return group;
}

/**
 * @class
 * @name Separator
 * @classdesc For use with {@link DuAEF.DuScriptUI}.<br />
 * A Separator.<br />
 * This is not a real class, and cannot be instanciated.<br />
 * Use {@link DuAEF.DuScriptUI.addSeparator} to create a Separator.<br />
 * The Separator inherits the Group object from ScriptUI and has all of its properties and methods.
 * @property {StaticText|CheckBox} label - the label
 * @property {boolean} checkable - Read-Only | true if a checkbox is displayed
 */

/**
 * Adds separator with an optionnal name in the group
 * @memberof DuAEF.DuScriptUI
 * @param {Panel|Window|Group} container - Where to create the separator
 * @param {string} [name] - The name displayed
 * @param {boolean} [checkable=false] - When true, adds a checkbox to the separator
 * @param {boolean} [drawLine=true] - Draws a line when there is no name. When false, the separator is an empty space
 * @return {Separator} The separator
 */
DuAEF.DuScriptUI.addSeparator = function( container, name, checkable, drawLine )
{
    if ( name == undefined ) name = '';
    if ( checkable == undefined ) checkable = false;
    if ( drawLine == undefined ) drawLine = true;

    if ( name != '' ) DuAEF.DuScriptUI.uiStrings.push( name );
    name = tr( name );

    var separator = DuAEF.DuScriptUI.addGroup( container, "row" );
    separator.margins = DuAEF.DuScriptUI.defaultMargins;
    separator.margins.bottom = DuAEF.DuScriptUI.defaultMargins * 2;
    separator.alignment = [ 'fill', 'top' ];
    separator.checkable = checkable;

    separator.label = null;
    if ( name != '' || checkable )
    {
        DuAEF.DuScriptUI.uiStrings.push( name );
        name = tr( name );
        if ( checkable ) separator.label = separator.add( 'checkbox', undefined, name );
        else separator.label = separator.add( 'statictext', undefined, name );
        separator.label.alignment = [ 'center', 'bottom' ];
        if ( drawLine ) DuAEF.DuScriptUI.setBackgroundColor( separator, DuAEF.DuJS.Color.Colors.DARK_GREY );
    }
    else if ( drawLine )
    {
        DuAEF.DuScriptUI.setBackgroundColor( separator, DuAEF.DuJS.Color.Colors.ABYSS_GREY );
    }

    separator.addEventListener( "mouseover", DuAEF.DuScriptUI.dimControls );

    return separator;
}
