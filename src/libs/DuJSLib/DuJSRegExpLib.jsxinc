/**
	* JavaScript Regular Expression related methods
	* @namespace
	* @memberof DuAEF.DuJS
*/
DuAEF.DuJS.RegExp = {};

/**
	* Escape reg exp reserved characters from a string to build a regular expression compatible string
	* @memberof DuAEF.DuJS.RegExp
	* @param {string}	string		- The string to escape
	* @return	{string}	The escaped string
*/
DuAEF.DuJS.RegExp.escapeRegExp = function (string)
{
	return string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
}

/**
 * The set containing javascript symbols ( +, -, [, etc.). Useful when parsing javascript code.
 * @readonly
 */
DuAEF.DuJS.RegExp.javascriptSymbols = "[\\s=!/*\\-+%()[\\]{};:.]";

/**
 * The set containing authorized characters for javascript variable. Useful when parsing javascript code.
 * @readonly
 */
DuAEF.DuJS.RegExp.javascriptVarChars = "[a-zA-Z0-9_]";